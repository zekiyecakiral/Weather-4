{"ast":null,"code":"var _jsxFileName = \"/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/CityCard.js\";\nimport React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nexport default function CityCard({\n  city\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    className: \"container\",\n    key: city.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, city.description.name, \", \", city.description.country, \" \"), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, city.description.main), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, city.description.description, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"min temp: \"), \" \", city.description.temp_min, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"max temp: \"), \" \", city.description.temp_max)), /*#__PURE__*/React.createElement(HighlightOffIcon, {\n    color: \"secondary\",\n    style: {\n      fontSize: 40\n    },\n    onClick: () => {\n      const selectedId = city.id;\n      const remainingCities = cities.filter(item => item.id !== selectedId);\n      setCities(remainingCities);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/CityCard.js"],"names":["React","useState","Card","CardContent","Typography","HighlightOffIcon","CityCard","city","id","description","name","country","main","temp_min","temp_max","fontSize","selectedId","remainingCities","cities","filter","item","setCities"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,eAAe,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AACvC,sBACE,uDACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,WAAL,CAAiBC,IADpB,QAC4BH,IAAI,CAACE,WAAL,CAAiBE,OAD7C,EACsD,GADtD,CADF,eAKE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCJ,IAAI,CAACE,WAAL,CAAiBG,IAApD,CALF,eAOE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,SAAS,EAAC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACE,WAAL,CAAiBA,WADpB,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,OAI2BF,IAAI,CAACE,WAAL,CAAiBI,QAJ5C,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,OAM2BN,IAAI,CAACE,WAAL,CAAiBK,QAN5C,CAPF,CADF,eAiBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAFT;AAGE,IAAA,OAAO,EAAE,MAAM;AACb,YAAMC,UAAU,GAAGT,IAAI,CAACC,EAAxB;AACA,YAAMS,eAAe,GAAGC,MAAM,CAACC,MAAP,CACrBC,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYQ,UADA,CAAxB;AAGAK,MAAAA,SAAS,CAACJ,eAAD,CAAT;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CADF;AAiCD","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\n\nexport default function CityCard({city}) {\n  return (\n    <>\n      <Card className=\"container\" key={city.id}>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">\n            {city.description.name}, {city.description.country}{\" \"}\n          </Typography>\n\n          <Typography color=\"textSecondary\">{city.description.main}</Typography>\n\n          <Typography variant=\"body2\" component=\"p\">\n            {city.description.description}\n            <br />\n            <br />\n            <span>min temp: </span> {city.description.temp_min}\n            <br />\n            <span>max temp: </span> {city.description.temp_max}\n          </Typography>\n        </CardContent>\n        <HighlightOffIcon\n          color=\"secondary\"\n          style={{ fontSize: 40 }}\n          onClick={() => {\n            const selectedId = city.id;\n            const remainingCities = cities.filter(\n              (item) => item.id !== selectedId\n            );\n            setCities(remainingCities);\n          }}\n        />\n      </Card>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}