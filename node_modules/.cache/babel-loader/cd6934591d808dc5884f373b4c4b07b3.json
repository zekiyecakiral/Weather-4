{"ast":null,"code":"var _jsxFileName = \"/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/Forecast.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Chart from \"./chart\";\nconst KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\nfunction Forecast() {\n  const {\n    cityName\n  } = useParams();\n  const history = useHistory();\n  const [dataToDraw, setDataToDraw] = useState([]);\n  const [countryName, setCountryName] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  const fetchDetails = async name => {\n    try {\n      const data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${name}&units=metric&appid=${KEY}`);\n      setLoading(true);\n      let fiveDaysData = await data.json();\n      console.log(fiveDaysData);\n      let chartData = [];\n\n      for (let i = 0; i < fiveDaysData.list.length; i++) chartData = [...chartData, {\n        name: fiveDaysData.list[i].dt_txt,\n        \"°C\": fiveDaysData.list[i].main.temp\n      }];\n\n      setLoading(false);\n      return chartData;\n    } catch (error) {\n      setError(true);\n      console.error(error);\n    }\n  };\n\n  function navigateToHome() {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    fetchDetails(cityName).then(data => setDataToDraw(data));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, cityName, \" , \", countryName), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(Chart, {\n    dataToDraw: dataToDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, hasError && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Sorry can't load chart\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: navigateToHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Home\"));\n}\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/Forecast.js"],"names":["React","useEffect","useState","useParams","useHistory","Chart","KEY","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","Forecast","cityName","history","dataToDraw","setDataToDraw","countryName","setCountryName","isLoading","setLoading","hasError","setError","fetchDetails","name","data","fetch","fiveDaysData","json","console","log","chartData","i","list","length","dt_txt","main","temp","error","navigateToHome","push","then"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,gCAAxB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAeR,SAAS,EAA9B;AACA,QAAMS,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,SAAD,EAAYC,UAAZ,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,QAAX,IAAuBlB,QAAQ,CAAC,KAAD,CAArC;;AAEA,QAAMmB,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnC,QAAI;AAEF,YAAMC,IAAI,GAAG,MAAMC,KAAK,CACrB,sDAAqDF,IAAK,uBAAsBhB,GAAI,EAD/D,CAAxB;AAGAY,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAIO,YAAY,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,UAAII,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,YAAY,CAACM,IAAb,CAAkBC,MAAtC,EAA8CF,CAAC,EAA/C,EACED,SAAS,GAAG,CACV,GAAGA,SADO,EAEV;AACEP,QAAAA,IAAI,EAAEG,YAAY,CAACM,IAAb,CAAkBD,CAAlB,EAAqBG,MAD7B;AAEE,cAAMR,YAAY,CAACM,IAAb,CAAkBD,CAAlB,EAAqBI,IAArB,CAA0BC;AAFlC,OAFU,CAAZ;;AAQFjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOW,SAAP;AACD,KApBD,CAoBE,OAAOO,KAAP,EAAc;AACdhB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAO,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACD;AACF,GAzBD;;AA2BA,WAASC,cAAT,GAA0B;AACxBzB,IAAAA,OAAO,CAAC0B,IAAR,CAAa,GAAb;AACD;;AAEDrC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY,CAACV,QAAD,CAAZ,CAAuB4B,IAAvB,CAA6BhB,IAAD,IAAUT,aAAa,CAACS,IAAD,CAAnD;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,QADH,SACgBI,WADhB,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,CAACE,SAAD,iBAAc,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEJ,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMM,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAlB,CALF,eAME;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEkB,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CADF;AAYD;;AAED,eAAe3B,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Chart from \"./chart\";\n\nconst KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\nfunction Forecast() {\n  const { cityName } = useParams();\n  const history = useHistory();\n  const [dataToDraw, setDataToDraw] = useState([]);\n  const [countryName, setCountryName] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  const fetchDetails = async (name) => {\n    try {\n\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${name}&units=metric&appid=${KEY}`\n      );\n      setLoading(true);\n      let fiveDaysData = await data.json();\n      console.log(fiveDaysData);\n      let chartData = [];\n      for (let i = 0; i < fiveDaysData.list.length; i++)\n        chartData = [\n          ...chartData,\n          {\n            name: fiveDaysData.list[i].dt_txt,\n            \"°C\": fiveDaysData.list[i].main.temp,\n          },\n        ];\n\n      setLoading(false);\n      return chartData;\n    } catch (error) {\n      setError(true);\n      console.error(error);\n    }\n  };\n\n  function navigateToHome() {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    fetchDetails(cityName).then((data) => setDataToDraw(data));\n  }, []);\n\n  return (\n    <>\n      <div>\n        {cityName} , {countryName}\n      </div>\n      <div>{!isLoading && <Chart dataToDraw={dataToDraw}></Chart>}</div>\n      <div>{hasError && <p>Sorry can't load chart</p>}</div>\n      <button className=\"btn btn-primary\" onClick={navigateToHome}>\n        Home\n      </button>\n    </>\n  );\n}\n\nexport default Forecast;"]},"metadata":{},"sourceType":"module"}