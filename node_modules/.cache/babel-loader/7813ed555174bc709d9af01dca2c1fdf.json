{"ast":null,"code":"var _jsxFileName = \"/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/Forecast.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Chart from \"./Chart\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Error from \"./Error\";\nimport Button from \"@material-ui/core/Button\";\nconst API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\nfunction Forecast() {\n  const {\n    cityName\n  } = useParams();\n  const history = useHistory();\n  const [dataToDraw, setDataToDraw] = useState([]);\n  const [hasError, setHasError] = useState(false);\n\n  const fetchForecast = async name => {\n    fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${name}&units=metric&appid=${API_KEY}`).then(resp => {\n      if (!resp.ok) {\n        throw Error(resp.statusText);\n      }\n\n      return resp.json();\n    }).then(response => {\n      let fiveDaysForecast = [];\n\n      for (let i = 0; i < response.list.length; i++) {\n        fiveDaysForecast = [...fiveDaysForecast, {\n          name: response.list[i].dt_txt,\n          \"°C\": response.list[i].main.temp\n        }];\n        setDataToDraw(fiveDaysForecast);\n        setHasError(false);\n        if (i > 120) break;\n      }\n    }).catch(error => {\n      setHasError(true);\n    });\n  };\n\n  function navigateToHome() {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    fetchForecast(cityName);\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"5 day forecast\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, cityName), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, hasError && /*#__PURE__*/React.createElement(Error, {\n    message: \"Oppsss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }\n  }), !hasError && /*#__PURE__*/React.createElement(Chart, {\n    dataToDraw: dataToDraw,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: navigateToHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Home\")));\n}\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/Forecast.js"],"names":["React","useEffect","useState","useParams","useHistory","Chart","Card","CardContent","Typography","Error","Button","API_KEY","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","Forecast","cityName","history","dataToDraw","setDataToDraw","hasError","setHasError","fetchForecast","name","fetch","then","resp","ok","statusText","json","response","fiveDaysForecast","i","list","length","dt_txt","main","temp","catch","error","navigateToHome","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Chart from \"./Chart\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Error from \"./Error\";\nimport Button from \"@material-ui/core/Button\";\n\nconst API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\nfunction Forecast() {\n  const { cityName } = useParams();\n  const history = useHistory();\n  const [dataToDraw, setDataToDraw] = useState([]);\n  const [hasError, setHasError] = useState(false);\n\n  const fetchForecast = async (name) => {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?q=${name}&units=metric&appid=${API_KEY}`\n    )\n      .then((resp) => {\n        if (!resp.ok) {\n          throw Error(resp.statusText);\n        }\n        return resp.json();\n      })\n      .then((response) => {\n        let fiveDaysForecast = [];\n        for (let i = 0; i < response.list.length; i++) {\n          fiveDaysForecast = [\n            ...fiveDaysForecast,\n            {\n              name: response.list[i].dt_txt,\n              \"°C\": response.list[i].main.temp,\n            },\n          ];\n          setDataToDraw(fiveDaysForecast);\n          setHasError(false);\n          if(i>120) break;\n        }\n      })\n      .catch((error) => {\n        setHasError(true);\n      });\n  };\n\n  function navigateToHome() {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    fetchForecast(cityName);\n  }, []);\n\n  return (\n    <Card>\n   \n      <CardContent>\n      <Typography variant=\"h4\">5 day forecast</Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {cityName}\n        </Typography>\n\n        <Typography>\n          {hasError && <Error message=\"Oppsss\" />}\n          {!hasError && <Chart dataToDraw={dataToDraw} />}\n        </Typography>\n        <Button variant=\"contained\" color=\"secondary\" onClick={navigateToHome}>\n          Home\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}