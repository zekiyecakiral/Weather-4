{"ast":null,"code":"var _jsxFileName = \"/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/Forecast.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Chart from \"./chart\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Error from \"./Error\";\nimport Button from '@material-ui/core/Button';\nconst KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\nfunction Forecast() {\n  const {\n    cityName\n  } = useParams();\n  const history = useHistory();\n  const [dataToDraw, setDataToDraw] = useState([]);\n  const [hasError, setError] = useState(false);\n\n  const fetchDetails = async name => {\n    try {\n      const data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${name}&units=metric&appid=${KEY}`);\n      let fiveDaysData = await data.json();\n      console.log(fiveDaysData);\n      let chartData = [];\n\n      for (let i = 0; i < fiveDaysData.list.length; i++) {\n        chartData = [...chartData, {\n          name: fiveDaysData.list[i].dt_txt,\n          pv: fiveDaysData.list[i].main.temp\n        }];\n        if (i > 15) break;\n      }\n\n      return chartData;\n    } catch (error) {\n      setError(true);\n      console.error(error);\n    }\n  };\n\n  function navigateToHome() {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    fetchDetails(cityName).then(data => setDataToDraw(data));\n  }, []);\n  const datadd = [{\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  }, {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  }, {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  }, {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  }, {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  }, {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  }, {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, cityName), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, hasError && /*#__PURE__*/React.createElement(Error, {\n    message: \"Oppsss\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }\n  }), !hasError && /*#__PURE__*/React.createElement(Chart, {\n    datadd: datadd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: navigateToHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Home\")));\n}\n\nexport default Forecast;","map":{"version":3,"sources":["/Users/HackYourFuture/Desktop/Week4/homework/weather-app-4/src/Forecast.js"],"names":["React","useEffect","useState","useParams","useHistory","Chart","Card","CardContent","Typography","Error","Button","KEY","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","Forecast","cityName","history","dataToDraw","setDataToDraw","hasError","setError","fetchDetails","name","data","fetch","fiveDaysData","json","console","log","chartData","i","list","length","dt_txt","pv","main","temp","error","navigateToHome","push","then","datadd","uv","amt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Chart from \"./chart\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Error from \"./Error\";\nimport Button from '@material-ui/core/Button';\n\nconst KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY;\n\nfunction Forecast() {\n  const { cityName } = useParams();\n  const history = useHistory();\n  const [dataToDraw, setDataToDraw] = useState([]);\n  const [hasError, setError] = useState(false);\n\n  const fetchDetails = async (name) => {\n    try {\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${name}&units=metric&appid=${KEY}`\n      );\n      let fiveDaysData = await data.json();\n      console.log(fiveDaysData);\n      let chartData = [];\n\n      for (let i = 0; i < fiveDaysData.list.length; i++) {\n        chartData = [\n          ...chartData,\n          {\n            name: fiveDaysData.list[i].dt_txt,\n            pv: fiveDaysData.list[i].main.temp,\n          },\n        ];\n        if(i>15) break;\n      }\n\n      return chartData;\n    } catch (error) {\n      setError(true);\n      console.error(error);\n    }\n  };\n\n  function navigateToHome() {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    fetchDetails(cityName).then((data) => setDataToDraw(data));\n  }, []);\n  const datadd = [\n    {name: 'Page A', uv: 4000, pv: 2400, amt: 2400},\n    {name: 'Page B', uv: 3000, pv: 1398, amt: 2210},\n    {name: 'Page C', uv: 2000, pv: 9800, amt: 2290},\n    {name: 'Page D', uv: 2780, pv: 3908, amt: 2000},\n    {name: 'Page E', uv: 1890, pv: 4800, amt: 2181},\n    {name: 'Page F', uv: 2390, pv: 3800, amt: 2500},\n    {name: 'Page G', uv: 3490, pv: 4300, amt: 2100},\n];\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {cityName}\n        </Typography>\n\n        <Typography>\n          {hasError && <Error message=\"Oppsss\" />}\n          {!hasError && <Chart datadd={datadd} />}\n        </Typography>\n        <Button variant=\"contained\" color=\"secondary\" onClick={navigateToHome}>\n            Home\n          </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}